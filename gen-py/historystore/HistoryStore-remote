#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
if sys.version_info[0] > 2:
    from urllib.parse import urlparse
else:
    from urlparse import urlparse
from thrift.transport import TTransport, TSocket, TSSLSocket, THttpClient
from thrift.protocol.TBinaryProtocol import TBinaryProtocol

from historystore import HistoryStore
from historystore.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
    print('')
    print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] [-novalidate] [-ca_certs certs] [-keyfile keyfile] [-certfile certfile] function [arg1 [arg2...]]')
    print('')
    print('Functions:')
    print('  void put(string key, string val)')
    print('   get(string key)')
    print('   getAt(string key, i32 value)')
    print('  void delKey(string key)')
    print('  void delVal(string key, string value)')
    print('   diff(string key, i32 time1, i32 time2)')
    print('')
    sys.exit(0)

pp = pprint.PrettyPrinter(indent=2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
validate = True
ca_certs = None
keyfile = None
certfile = None
http = False
argi = 1

if sys.argv[argi] == '-h':
    parts = sys.argv[argi + 1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    argi += 2

if sys.argv[argi] == '-u':
    url = urlparse(sys.argv[argi + 1])
    parts = url[1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    else:
        port = 80
    uri = url[2]
    if url[4]:
        uri += '?%s' % url[4]
    http = True
    argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
    framed = True
    argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
    ssl = True
    argi += 1

if sys.argv[argi] == '-novalidate':
    validate = False
    argi += 1

if sys.argv[argi] == '-ca_certs':
    ca_certs = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-keyfile':
    keyfile = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-certfile':
    certfile = sys.argv[argi+1]
    argi += 2

cmd = sys.argv[argi]
args = sys.argv[argi + 1:]

if http:
    transport = THttpClient.THttpClient(host, port, uri)
else:
    if ssl:
        socket = TSSLSocket.TSSLSocket(host, port, validate=validate, ca_certs=ca_certs, keyfile=keyfile, certfile=certfile)
    else:
        socket = TSocket.TSocket(host, port)
    if framed:
        transport = TTransport.TFramedTransport(socket)
    else:
        transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol(transport)
client = HistoryStore.Client(protocol)
transport.open()

if cmd == 'put':
    if len(args) != 2:
        print('put requires 2 args')
        sys.exit(1)
    pp.pprint(client.put(args[0], args[1],))

elif cmd == 'get':
    if len(args) != 1:
        print('get requires 1 args')
        sys.exit(1)
    pp.pprint(client.get(args[0],))

elif cmd == 'getAt':
    if len(args) != 2:
        print('getAt requires 2 args')
        sys.exit(1)
    pp.pprint(client.getAt(args[0], eval(args[1]),))

elif cmd == 'delKey':
    if len(args) != 1:
        print('delKey requires 1 args')
        sys.exit(1)
    pp.pprint(client.delKey(args[0],))

elif cmd == 'delVal':
    if len(args) != 2:
        print('delVal requires 2 args')
        sys.exit(1)
    pp.pprint(client.delVal(args[0], args[1],))

elif cmd == 'diff':
    if len(args) != 3:
        print('diff requires 3 args')
        sys.exit(1)
    pp.pprint(client.diff(args[0], eval(args[1]), eval(args[2]),))

else:
    print('Unrecognized method %s' % cmd)
    sys.exit(1)

transport.close()
